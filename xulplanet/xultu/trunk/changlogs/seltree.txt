
 <P>
 For trees that allow multiple selection, getting the list of selected rows
-is a bit more complicated. The tree element has a property
-<SPAN CLASS="attrib">view</SPAN> which in turn has a property
-<SPAN CLASS="attrib">selection</SPAN>, which contains properties and methods
-related to the current selection in the tree. You can use these methods to
-retrieve the set of selected items or modify the selection.
+is a bit more complicated. The tree's view has a selection property which holds
+information about the selected rows. This selection will be a
+<a href="http://xulplanet.com/references/objref/TreeSelection.html">TreeSelection</a>
+object. The view doesn't need to implement this object itself, the tree will assign
+a selection object to the view's selection property when the view is attached
+to a tree. From the tree, you can get the selection using the tree's
+<SPAN CLASS="attrib">view</SPAN> property and then retrieve the view's
+<SPAN CLASS="attrib">selection</SPAN> property. You can use the methods of the
+selection object to retrieve the set of selected items or modify the selection.
 </P>

 @@ -143,6 +146,68 @@
 for each index.
 </P>

+<P>
+If you just want to find out if a specific row is selected, use can use the
+isSelected function. It takes a row index as an argument and returns true if
+that row is selected.
+</P>
+
+
+<DIV CLASS="sample"><PRE>
+alert(tree.view.selection.isSelected(3));</PRE></DIV>
+
+
+
+<H3>Modifying the Tree Selection</H3>
+
+<P>
+The selection object has a number of functions which may be used to change the
+selection. The simplest function is the select function, which deselects any
+rows that are currently selected and selects one specific row. For example, the
+following code will select the row at index 5:
+</P>
+
+
+<DIV CLASS="sample"><PRE>
+tree.view.selection.select(5);</PRE></DIV>
+
+
+
+<P>
+Note that you should not just change the tree's currentIndex property to change the
+selection. Instead, you should use the selection's select function as in the example
+above. You can select all rows with the selectAll function. Note that rows nested
+inside containers that are not open will not be selected. Naturally, this will only
+have any effect for trees that use multiple selection. There is also a clearSelection
+function to clear the selection, and an invertSelection function to reverse the
+selection, that is, deselect all selected rows and select all unselected rows.
+</P>
+
+<P>
+To select specific rows, use the rangedSelect function which selects all rows in between
+two indices. Here is an example which selects rows between index 2 and 7. Note that rows
+2 and 7 will also be selected.
+</P>
+
+
+<DIV CLASS="sample"><PRE>
+tree.view.selection.rangedSelect(2,7,true);</PRE></DIV>
+
+
+
+<P>
+The last argument indicates whether to add to the current selection or not. If true,
+the range will be added to the existing selection. If false, all existing selected rows
+will be deselected first. Finally, the clearRange function may be used to deselect a
+range of rows, leaving rows outside the range unaffected.
+</P>
+
+
+<DIV CLASS="sample"><PRE>
+tree.view.selection.clearRange(2,7);</PRE></DIV>
+
+
+
 <HR>
 <P>
 <A HREF="treeview.html">(Next)</A>

